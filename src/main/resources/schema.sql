DROP TABLE IF EXISTS likes CASCADE ;
DROP TABLE IF EXISTS friends CASCADE ;
DROP TABLE IF EXISTS users CASCADE ;
DROP TABLE IF EXISTS films_genre CASCADE ;
DROP TABLE IF EXISTS genres CASCADE ;
DROP TABLE IF EXISTS films CASCADE ;
DROP TABLE IF EXISTS mpa CASCADE;

CREATE TABLE IF NOT EXISTS mpa(
	mpa_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar NOT NULL
);


CREATE TABLE IF NOT EXISTS films(
	film_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar NOT NULL,
	description varchar(200) NOT NULL,
	release_date date NOT NULL,
	duration integer NOT NULL,
	mpa_id integer REFERENCES mpa(mpa_id) ON UPDATE RESTRICT ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS genres(
	genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name varchar NOT NULL
);

CREATE TABLE IF NOT EXISTS films_genre(
	film_id bigint REFERENCES films(film_id) ON UPDATE RESTRICT ON DELETE CASCADE,
	genre_id integer REFERENCES genres(genre_id) ON UPDATE RESTRICT ON DELETE CASCADE,
	CONSTRAINT uq_film_genre UNIQUE(film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users(
	user_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	email varchar NOT NULL,
  	login varchar NOT NULL,
  	name varchar NOT NULL,
  	birthday date NOT NULL
);

CREATE TABLE IF NOT EXISTS friends(
	user_id bigint REFERENCES users(user_id) ON UPDATE RESTRICT ON DELETE CASCADE,
	friend_id bigint REFERENCES users(user_id) ON UPDATE RESTRICT ON DELETE CASCADE,
	friendship_status bool
);

CREATE TABLE IF NOT EXISTS likes(
	film_id bigint REFERENCES films(film_id) ON UPDATE RESTRICT ON DELETE CASCADE,
	user_id bigint REFERENCES users(user_id) ON UPDATE RESTRICT ON DELETE CASCADE,
	CONSTRAINT uq_likes UNIQUE(film_id, user_id)
);
